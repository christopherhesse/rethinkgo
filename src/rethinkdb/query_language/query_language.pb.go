// Code generated by protoc-gen-go.
// source: query_language.proto
// DO NOT EDIT!

package query_language

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Term_TermType int32

const (
	Term_JSON_NULL    Term_TermType = 0
	Term_VAR          Term_TermType = 1
	Term_LET          Term_TermType = 2
	Term_CALL         Term_TermType = 3
	Term_IF           Term_TermType = 4
	Term_ERROR        Term_TermType = 5
	Term_NUMBER       Term_TermType = 6
	Term_STRING       Term_TermType = 7
	Term_JSON         Term_TermType = 8
	Term_BOOL         Term_TermType = 9
	Term_ARRAY        Term_TermType = 10
	Term_OBJECT       Term_TermType = 11
	Term_GETBYKEY     Term_TermType = 12
	Term_TABLE        Term_TermType = 13
	Term_JAVASCRIPT   Term_TermType = 14
	Term_IMPLICIT_VAR Term_TermType = 15
)

var Term_TermType_name = map[int32]string{
	0:  "JSON_NULL",
	1:  "VAR",
	2:  "LET",
	3:  "CALL",
	4:  "IF",
	5:  "ERROR",
	6:  "NUMBER",
	7:  "STRING",
	8:  "JSON",
	9:  "BOOL",
	10: "ARRAY",
	11: "OBJECT",
	12: "GETBYKEY",
	13: "TABLE",
	14: "JAVASCRIPT",
	15: "IMPLICIT_VAR",
}
var Term_TermType_value = map[string]int32{
	"JSON_NULL":    0,
	"VAR":          1,
	"LET":          2,
	"CALL":         3,
	"IF":           4,
	"ERROR":        5,
	"NUMBER":       6,
	"STRING":       7,
	"JSON":         8,
	"BOOL":         9,
	"ARRAY":        10,
	"OBJECT":       11,
	"GETBYKEY":     12,
	"TABLE":        13,
	"JAVASCRIPT":   14,
	"IMPLICIT_VAR": 15,
}

func (x Term_TermType) Enum() *Term_TermType {
	p := new(Term_TermType)
	*p = x
	return p
}
func (x Term_TermType) String() string {
	return proto.EnumName(Term_TermType_name, int32(x))
}
func (x Term_TermType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Term_TermType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Term_TermType_value, data, "Term_TermType")
	if err != nil {
		return err
	}
	*x = Term_TermType(value)
	return nil
}

type Builtin_BuiltinType int32

const (
	Builtin_NOT                Builtin_BuiltinType = 1
	Builtin_GETATTR            Builtin_BuiltinType = 2
	Builtin_IMPLICIT_GETATTR   Builtin_BuiltinType = 3
	Builtin_HASATTR            Builtin_BuiltinType = 4
	Builtin_IMPLICIT_HASATTR   Builtin_BuiltinType = 5
	Builtin_PICKATTRS          Builtin_BuiltinType = 6
	Builtin_IMPLICIT_PICKATTRS Builtin_BuiltinType = 7
	Builtin_MAPMERGE           Builtin_BuiltinType = 8
	Builtin_ARRAYAPPEND        Builtin_BuiltinType = 9
	Builtin_SLICE              Builtin_BuiltinType = 11
	Builtin_ADD                Builtin_BuiltinType = 14
	Builtin_SUBTRACT           Builtin_BuiltinType = 15
	Builtin_MULTIPLY           Builtin_BuiltinType = 16
	Builtin_DIVIDE             Builtin_BuiltinType = 17
	Builtin_MODULO             Builtin_BuiltinType = 18
	Builtin_COMPARE            Builtin_BuiltinType = 19
	Builtin_FILTER             Builtin_BuiltinType = 20
	Builtin_MAP                Builtin_BuiltinType = 21
	Builtin_CONCATMAP          Builtin_BuiltinType = 22
	Builtin_ORDERBY            Builtin_BuiltinType = 23
	Builtin_DISTINCT           Builtin_BuiltinType = 24
	Builtin_LENGTH             Builtin_BuiltinType = 26
	Builtin_UNION              Builtin_BuiltinType = 27
	Builtin_NTH                Builtin_BuiltinType = 28
	Builtin_STREAMTOARRAY      Builtin_BuiltinType = 29
	Builtin_ARRAYTOSTREAM      Builtin_BuiltinType = 30
	Builtin_REDUCE             Builtin_BuiltinType = 31
	Builtin_GROUPEDMAPREDUCE   Builtin_BuiltinType = 32
	Builtin_ANY                Builtin_BuiltinType = 35
	Builtin_ALL                Builtin_BuiltinType = 36
	Builtin_RANGE              Builtin_BuiltinType = 37
	Builtin_IMPLICIT_WITHOUT   Builtin_BuiltinType = 38
	Builtin_WITHOUT            Builtin_BuiltinType = 39
)

var Builtin_BuiltinType_name = map[int32]string{
	1:  "NOT",
	2:  "GETATTR",
	3:  "IMPLICIT_GETATTR",
	4:  "HASATTR",
	5:  "IMPLICIT_HASATTR",
	6:  "PICKATTRS",
	7:  "IMPLICIT_PICKATTRS",
	8:  "MAPMERGE",
	9:  "ARRAYAPPEND",
	11: "SLICE",
	14: "ADD",
	15: "SUBTRACT",
	16: "MULTIPLY",
	17: "DIVIDE",
	18: "MODULO",
	19: "COMPARE",
	20: "FILTER",
	21: "MAP",
	22: "CONCATMAP",
	23: "ORDERBY",
	24: "DISTINCT",
	26: "LENGTH",
	27: "UNION",
	28: "NTH",
	29: "STREAMTOARRAY",
	30: "ARRAYTOSTREAM",
	31: "REDUCE",
	32: "GROUPEDMAPREDUCE",
	35: "ANY",
	36: "ALL",
	37: "RANGE",
	38: "IMPLICIT_WITHOUT",
	39: "WITHOUT",
}
var Builtin_BuiltinType_value = map[string]int32{
	"NOT":                1,
	"GETATTR":            2,
	"IMPLICIT_GETATTR":   3,
	"HASATTR":            4,
	"IMPLICIT_HASATTR":   5,
	"PICKATTRS":          6,
	"IMPLICIT_PICKATTRS": 7,
	"MAPMERGE":           8,
	"ARRAYAPPEND":        9,
	"SLICE":              11,
	"ADD":                14,
	"SUBTRACT":           15,
	"MULTIPLY":           16,
	"DIVIDE":             17,
	"MODULO":             18,
	"COMPARE":            19,
	"FILTER":             20,
	"MAP":                21,
	"CONCATMAP":          22,
	"ORDERBY":            23,
	"DISTINCT":           24,
	"LENGTH":             26,
	"UNION":              27,
	"NTH":                28,
	"STREAMTOARRAY":      29,
	"ARRAYTOSTREAM":      30,
	"REDUCE":             31,
	"GROUPEDMAPREDUCE":   32,
	"ANY":                35,
	"ALL":                36,
	"RANGE":              37,
	"IMPLICIT_WITHOUT":   38,
	"WITHOUT":            39,
}

func (x Builtin_BuiltinType) Enum() *Builtin_BuiltinType {
	p := new(Builtin_BuiltinType)
	*p = x
	return p
}
func (x Builtin_BuiltinType) String() string {
	return proto.EnumName(Builtin_BuiltinType_name, int32(x))
}
func (x Builtin_BuiltinType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Builtin_BuiltinType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Builtin_BuiltinType_value, data, "Builtin_BuiltinType")
	if err != nil {
		return err
	}
	*x = Builtin_BuiltinType(value)
	return nil
}

type Builtin_Comparison int32

const (
	Builtin_EQ Builtin_Comparison = 1
	Builtin_NE Builtin_Comparison = 2
	Builtin_LT Builtin_Comparison = 3
	Builtin_LE Builtin_Comparison = 4
	Builtin_GT Builtin_Comparison = 5
	Builtin_GE Builtin_Comparison = 6
)

var Builtin_Comparison_name = map[int32]string{
	1: "EQ",
	2: "NE",
	3: "LT",
	4: "LE",
	5: "GT",
	6: "GE",
}
var Builtin_Comparison_value = map[string]int32{
	"EQ": 1,
	"NE": 2,
	"LT": 3,
	"LE": 4,
	"GT": 5,
	"GE": 6,
}

func (x Builtin_Comparison) Enum() *Builtin_Comparison {
	p := new(Builtin_Comparison)
	*p = x
	return p
}
func (x Builtin_Comparison) String() string {
	return proto.EnumName(Builtin_Comparison_name, int32(x))
}
func (x Builtin_Comparison) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Builtin_Comparison) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Builtin_Comparison_value, data, "Builtin_Comparison")
	if err != nil {
		return err
	}
	*x = Builtin_Comparison(value)
	return nil
}

type WriteQuery_WriteQueryType int32

const (
	WriteQuery_UPDATE      WriteQuery_WriteQueryType = 1
	WriteQuery_DELETE      WriteQuery_WriteQueryType = 2
	WriteQuery_MUTATE      WriteQuery_WriteQueryType = 3
	WriteQuery_INSERT      WriteQuery_WriteQueryType = 4
	WriteQuery_FOREACH     WriteQuery_WriteQueryType = 6
	WriteQuery_POINTUPDATE WriteQuery_WriteQueryType = 7
	WriteQuery_POINTDELETE WriteQuery_WriteQueryType = 8
	WriteQuery_POINTMUTATE WriteQuery_WriteQueryType = 9
)

var WriteQuery_WriteQueryType_name = map[int32]string{
	1: "UPDATE",
	2: "DELETE",
	3: "MUTATE",
	4: "INSERT",
	6: "FOREACH",
	7: "POINTUPDATE",
	8: "POINTDELETE",
	9: "POINTMUTATE",
}
var WriteQuery_WriteQueryType_value = map[string]int32{
	"UPDATE":      1,
	"DELETE":      2,
	"MUTATE":      3,
	"INSERT":      4,
	"FOREACH":     6,
	"POINTUPDATE": 7,
	"POINTDELETE": 8,
	"POINTMUTATE": 9,
}

func (x WriteQuery_WriteQueryType) Enum() *WriteQuery_WriteQueryType {
	p := new(WriteQuery_WriteQueryType)
	*p = x
	return p
}
func (x WriteQuery_WriteQueryType) String() string {
	return proto.EnumName(WriteQuery_WriteQueryType_name, int32(x))
}
func (x WriteQuery_WriteQueryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *WriteQuery_WriteQueryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WriteQuery_WriteQueryType_value, data, "WriteQuery_WriteQueryType")
	if err != nil {
		return err
	}
	*x = WriteQuery_WriteQueryType(value)
	return nil
}

type MetaQuery_MetaQueryType int32

const (
	MetaQuery_CREATE_DB    MetaQuery_MetaQueryType = 1
	MetaQuery_DROP_DB      MetaQuery_MetaQueryType = 2
	MetaQuery_LIST_DBS     MetaQuery_MetaQueryType = 3
	MetaQuery_CREATE_TABLE MetaQuery_MetaQueryType = 4
	MetaQuery_DROP_TABLE   MetaQuery_MetaQueryType = 5
	MetaQuery_LIST_TABLES  MetaQuery_MetaQueryType = 6
)

var MetaQuery_MetaQueryType_name = map[int32]string{
	1: "CREATE_DB",
	2: "DROP_DB",
	3: "LIST_DBS",
	4: "CREATE_TABLE",
	5: "DROP_TABLE",
	6: "LIST_TABLES",
}
var MetaQuery_MetaQueryType_value = map[string]int32{
	"CREATE_DB":    1,
	"DROP_DB":      2,
	"LIST_DBS":     3,
	"CREATE_TABLE": 4,
	"DROP_TABLE":   5,
	"LIST_TABLES":  6,
}

func (x MetaQuery_MetaQueryType) Enum() *MetaQuery_MetaQueryType {
	p := new(MetaQuery_MetaQueryType)
	*p = x
	return p
}
func (x MetaQuery_MetaQueryType) String() string {
	return proto.EnumName(MetaQuery_MetaQueryType_name, int32(x))
}
func (x MetaQuery_MetaQueryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MetaQuery_MetaQueryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetaQuery_MetaQueryType_value, data, "MetaQuery_MetaQueryType")
	if err != nil {
		return err
	}
	*x = MetaQuery_MetaQueryType(value)
	return nil
}

type Query_QueryType int32

const (
	Query_READ     Query_QueryType = 1
	Query_WRITE    Query_QueryType = 2
	Query_CONTINUE Query_QueryType = 3
	Query_STOP     Query_QueryType = 4
	Query_META     Query_QueryType = 5
)

var Query_QueryType_name = map[int32]string{
	1: "READ",
	2: "WRITE",
	3: "CONTINUE",
	4: "STOP",
	5: "META",
}
var Query_QueryType_value = map[string]int32{
	"READ":     1,
	"WRITE":    2,
	"CONTINUE": 3,
	"STOP":     4,
	"META":     5,
}

func (x Query_QueryType) Enum() *Query_QueryType {
	p := new(Query_QueryType)
	*p = x
	return p
}
func (x Query_QueryType) String() string {
	return proto.EnumName(Query_QueryType_name, int32(x))
}
func (x Query_QueryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Query_QueryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Query_QueryType_value, data, "Query_QueryType")
	if err != nil {
		return err
	}
	*x = Query_QueryType(value)
	return nil
}

type Response_StatusCode int32

const (
	Response_SUCCESS_EMPTY   Response_StatusCode = 0
	Response_SUCCESS_JSON    Response_StatusCode = 1
	Response_SUCCESS_PARTIAL Response_StatusCode = 2
	Response_SUCCESS_STREAM  Response_StatusCode = 3
	Response_BROKEN_CLIENT   Response_StatusCode = 101
	Response_BAD_QUERY       Response_StatusCode = 102
	Response_RUNTIME_ERROR   Response_StatusCode = 103
)

var Response_StatusCode_name = map[int32]string{
	0:   "SUCCESS_EMPTY",
	1:   "SUCCESS_JSON",
	2:   "SUCCESS_PARTIAL",
	3:   "SUCCESS_STREAM",
	101: "BROKEN_CLIENT",
	102: "BAD_QUERY",
	103: "RUNTIME_ERROR",
}
var Response_StatusCode_value = map[string]int32{
	"SUCCESS_EMPTY":   0,
	"SUCCESS_JSON":    1,
	"SUCCESS_PARTIAL": 2,
	"SUCCESS_STREAM":  3,
	"BROKEN_CLIENT":   101,
	"BAD_QUERY":       102,
	"RUNTIME_ERROR":   103,
}

func (x Response_StatusCode) Enum() *Response_StatusCode {
	p := new(Response_StatusCode)
	*p = x
	return p
}
func (x Response_StatusCode) String() string {
	return proto.EnumName(Response_StatusCode_name, int32(x))
}
func (x Response_StatusCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Response_StatusCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_StatusCode_value, data, "Response_StatusCode")
	if err != nil {
		return err
	}
	*x = Response_StatusCode(value)
	return nil
}

type TableRef struct {
	DbName           *string `protobuf:"bytes,1,req,name=db_name" json:"db_name,omitempty"`
	TableName        *string `protobuf:"bytes,2,req,name=table_name" json:"table_name,omitempty"`
	UseOutdated      *bool   `protobuf:"varint,3,opt,name=use_outdated,def=0" json:"use_outdated,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *TableRef) Reset()         { *this = TableRef{} }
func (this *TableRef) String() string { return proto.CompactTextString(this) }
func (*TableRef) ProtoMessage()       {}

const Default_TableRef_UseOutdated bool = false

func (this *TableRef) GetDbName() string {
	if this != nil && this.DbName != nil {
		return *this.DbName
	}
	return ""
}

func (this *TableRef) GetTableName() string {
	if this != nil && this.TableName != nil {
		return *this.TableName
	}
	return ""
}

func (this *TableRef) GetUseOutdated() bool {
	if this != nil && this.UseOutdated != nil {
		return *this.UseOutdated
	}
	return Default_TableRef_UseOutdated
}

type VarTermTuple struct {
	Var              *string `protobuf:"bytes,1,req,name=var" json:"var,omitempty"`
	Term             *Term   `protobuf:"bytes,2,req,name=term" json:"term,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *VarTermTuple) Reset()         { *this = VarTermTuple{} }
func (this *VarTermTuple) String() string { return proto.CompactTextString(this) }
func (*VarTermTuple) ProtoMessage()       {}

func (this *VarTermTuple) GetVar() string {
	if this != nil && this.Var != nil {
		return *this.Var
	}
	return ""
}

func (this *VarTermTuple) GetTerm() *Term {
	if this != nil {
		return this.Term
	}
	return nil
}

type Term struct {
	Type             *Term_TermType            `protobuf:"varint,1,req,name=type,enum=Term_TermType" json:"type,omitempty"`
	Var              *string                   `protobuf:"bytes,2,opt,name=var" json:"var,omitempty"`
	Let              *Term_Let                 `protobuf:"bytes,3,opt,name=let" json:"let,omitempty"`
	Call             *Term_Call                `protobuf:"bytes,4,opt,name=call" json:"call,omitempty"`
	If_              *Term_If                  `protobuf:"bytes,5,opt,name=if_" json:"if_,omitempty"`
	Error            *string                   `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	Number           *float64                  `protobuf:"fixed64,7,opt,name=number" json:"number,omitempty"`
	Valuestring      *string                   `protobuf:"bytes,8,opt,name=valuestring" json:"valuestring,omitempty"`
	Jsonstring       *string                   `protobuf:"bytes,9,opt,name=jsonstring" json:"jsonstring,omitempty"`
	Valuebool        *bool                     `protobuf:"varint,10,opt,name=valuebool" json:"valuebool,omitempty"`
	Array            []*Term                   `protobuf:"bytes,11,rep,name=array" json:"array,omitempty"`
	Object           []*VarTermTuple           `protobuf:"bytes,12,rep,name=object" json:"object,omitempty"`
	GetByKey         *Term_GetByKey            `protobuf:"bytes,14,opt,name=get_by_key" json:"get_by_key,omitempty"`
	Table            *Term_Table               `protobuf:"bytes,15,opt,name=table" json:"table,omitempty"`
	Javascript       *string                   `protobuf:"bytes,16,opt,name=javascript" json:"javascript,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (this *Term) Reset()         { *this = Term{} }
func (this *Term) String() string { return proto.CompactTextString(this) }
func (*Term) ProtoMessage()       {}

var extRange_Term = []proto.ExtensionRange{
	{1000, 1099},
}

func (*Term) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Term
}
func (this *Term) ExtensionMap() map[int32]proto.Extension {
	if this.XXX_extensions == nil {
		this.XXX_extensions = make(map[int32]proto.Extension)
	}
	return this.XXX_extensions
}

func (this *Term) GetType() Term_TermType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Term) GetVar() string {
	if this != nil && this.Var != nil {
		return *this.Var
	}
	return ""
}

func (this *Term) GetLet() *Term_Let {
	if this != nil {
		return this.Let
	}
	return nil
}

func (this *Term) GetCall() *Term_Call {
	if this != nil {
		return this.Call
	}
	return nil
}

func (this *Term) GetIf_() *Term_If {
	if this != nil {
		return this.If_
	}
	return nil
}

func (this *Term) GetError() string {
	if this != nil && this.Error != nil {
		return *this.Error
	}
	return ""
}

func (this *Term) GetNumber() float64 {
	if this != nil && this.Number != nil {
		return *this.Number
	}
	return 0
}

func (this *Term) GetValuestring() string {
	if this != nil && this.Valuestring != nil {
		return *this.Valuestring
	}
	return ""
}

func (this *Term) GetJsonstring() string {
	if this != nil && this.Jsonstring != nil {
		return *this.Jsonstring
	}
	return ""
}

func (this *Term) GetValuebool() bool {
	if this != nil && this.Valuebool != nil {
		return *this.Valuebool
	}
	return false
}

func (this *Term) GetGetByKey() *Term_GetByKey {
	if this != nil {
		return this.GetByKey
	}
	return nil
}

func (this *Term) GetTable() *Term_Table {
	if this != nil {
		return this.Table
	}
	return nil
}

func (this *Term) GetJavascript() string {
	if this != nil && this.Javascript != nil {
		return *this.Javascript
	}
	return ""
}

type Term_Let struct {
	Binds            []*VarTermTuple `protobuf:"bytes,1,rep,name=binds" json:"binds,omitempty"`
	Expr             *Term           `protobuf:"bytes,2,req,name=expr" json:"expr,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (this *Term_Let) Reset()         { *this = Term_Let{} }
func (this *Term_Let) String() string { return proto.CompactTextString(this) }
func (*Term_Let) ProtoMessage()       {}

func (this *Term_Let) GetExpr() *Term {
	if this != nil {
		return this.Expr
	}
	return nil
}

type Term_Call struct {
	Builtin          *Builtin `protobuf:"bytes,1,req,name=builtin" json:"builtin,omitempty"`
	Args             []*Term  `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Term_Call) Reset()         { *this = Term_Call{} }
func (this *Term_Call) String() string { return proto.CompactTextString(this) }
func (*Term_Call) ProtoMessage()       {}

func (this *Term_Call) GetBuiltin() *Builtin {
	if this != nil {
		return this.Builtin
	}
	return nil
}

type Term_If struct {
	Test             *Term  `protobuf:"bytes,1,req,name=test" json:"test,omitempty"`
	TrueBranch       *Term  `protobuf:"bytes,2,req,name=true_branch" json:"true_branch,omitempty"`
	FalseBranch      *Term  `protobuf:"bytes,3,req,name=false_branch" json:"false_branch,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *Term_If) Reset()         { *this = Term_If{} }
func (this *Term_If) String() string { return proto.CompactTextString(this) }
func (*Term_If) ProtoMessage()       {}

func (this *Term_If) GetTest() *Term {
	if this != nil {
		return this.Test
	}
	return nil
}

func (this *Term_If) GetTrueBranch() *Term {
	if this != nil {
		return this.TrueBranch
	}
	return nil
}

func (this *Term_If) GetFalseBranch() *Term {
	if this != nil {
		return this.FalseBranch
	}
	return nil
}

type Term_GetByKey struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	Attrname         *string   `protobuf:"bytes,2,req,name=attrname" json:"attrname,omitempty"`
	Key              *Term     `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *Term_GetByKey) Reset()         { *this = Term_GetByKey{} }
func (this *Term_GetByKey) String() string { return proto.CompactTextString(this) }
func (*Term_GetByKey) ProtoMessage()       {}

func (this *Term_GetByKey) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *Term_GetByKey) GetAttrname() string {
	if this != nil && this.Attrname != nil {
		return *this.Attrname
	}
	return ""
}

func (this *Term_GetByKey) GetKey() *Term {
	if this != nil {
		return this.Key
	}
	return nil
}

type Term_Table struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *Term_Table) Reset()         { *this = Term_Table{} }
func (this *Term_Table) String() string { return proto.CompactTextString(this) }
func (*Term_Table) ProtoMessage()       {}

func (this *Term_Table) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

type Builtin struct {
	Type             *Builtin_BuiltinType      `protobuf:"varint,1,req,name=type,enum=Builtin_BuiltinType" json:"type,omitempty"`
	Attr             *string                   `protobuf:"bytes,2,opt,name=attr" json:"attr,omitempty"`
	Attrs            []string                  `protobuf:"bytes,3,rep,name=attrs" json:"attrs,omitempty"`
	Comparison       *Builtin_Comparison       `protobuf:"varint,4,opt,name=comparison,enum=Builtin_Comparison" json:"comparison,omitempty"`
	Filter           *Builtin_Filter           `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	Map              *Builtin_Map              `protobuf:"bytes,6,opt,name=map" json:"map,omitempty"`
	ConcatMap        *Builtin_ConcatMap        `protobuf:"bytes,7,opt,name=concat_map" json:"concat_map,omitempty"`
	OrderBy          []*Builtin_OrderBy        `protobuf:"bytes,8,rep,name=order_by" json:"order_by,omitempty"`
	Reduce           *Reduction                `protobuf:"bytes,9,opt,name=reduce" json:"reduce,omitempty"`
	GroupedMapReduce *Builtin_GroupedMapReduce `protobuf:"bytes,10,opt,name=grouped_map_reduce" json:"grouped_map_reduce,omitempty"`
	Range            *Builtin_Range            `protobuf:"bytes,11,opt,name=range" json:"range,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (this *Builtin) Reset()         { *this = Builtin{} }
func (this *Builtin) String() string { return proto.CompactTextString(this) }
func (*Builtin) ProtoMessage()       {}

func (this *Builtin) GetType() Builtin_BuiltinType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Builtin) GetAttr() string {
	if this != nil && this.Attr != nil {
		return *this.Attr
	}
	return ""
}

func (this *Builtin) GetComparison() Builtin_Comparison {
	if this != nil && this.Comparison != nil {
		return *this.Comparison
	}
	return 0
}

func (this *Builtin) GetFilter() *Builtin_Filter {
	if this != nil {
		return this.Filter
	}
	return nil
}

func (this *Builtin) GetMap() *Builtin_Map {
	if this != nil {
		return this.Map
	}
	return nil
}

func (this *Builtin) GetConcatMap() *Builtin_ConcatMap {
	if this != nil {
		return this.ConcatMap
	}
	return nil
}

func (this *Builtin) GetReduce() *Reduction {
	if this != nil {
		return this.Reduce
	}
	return nil
}

func (this *Builtin) GetGroupedMapReduce() *Builtin_GroupedMapReduce {
	if this != nil {
		return this.GroupedMapReduce
	}
	return nil
}

func (this *Builtin) GetRange() *Builtin_Range {
	if this != nil {
		return this.Range
	}
	return nil
}

type Builtin_Filter struct {
	Predicate        *Predicate `protobuf:"bytes,1,req,name=predicate" json:"predicate,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (this *Builtin_Filter) Reset()         { *this = Builtin_Filter{} }
func (this *Builtin_Filter) String() string { return proto.CompactTextString(this) }
func (*Builtin_Filter) ProtoMessage()       {}

func (this *Builtin_Filter) GetPredicate() *Predicate {
	if this != nil {
		return this.Predicate
	}
	return nil
}

type Builtin_Map struct {
	Mapping          *Mapping `protobuf:"bytes,1,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Builtin_Map) Reset()         { *this = Builtin_Map{} }
func (this *Builtin_Map) String() string { return proto.CompactTextString(this) }
func (*Builtin_Map) ProtoMessage()       {}

func (this *Builtin_Map) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type Builtin_ConcatMap struct {
	Mapping          *Mapping `protobuf:"bytes,1,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Builtin_ConcatMap) Reset()         { *this = Builtin_ConcatMap{} }
func (this *Builtin_ConcatMap) String() string { return proto.CompactTextString(this) }
func (*Builtin_ConcatMap) ProtoMessage()       {}

func (this *Builtin_ConcatMap) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type Builtin_OrderBy struct {
	Attr             *string `protobuf:"bytes,1,req,name=attr" json:"attr,omitempty"`
	Ascending        *bool   `protobuf:"varint,2,opt,name=ascending,def=1" json:"ascending,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Builtin_OrderBy) Reset()         { *this = Builtin_OrderBy{} }
func (this *Builtin_OrderBy) String() string { return proto.CompactTextString(this) }
func (*Builtin_OrderBy) ProtoMessage()       {}

const Default_Builtin_OrderBy_Ascending bool = true

func (this *Builtin_OrderBy) GetAttr() string {
	if this != nil && this.Attr != nil {
		return *this.Attr
	}
	return ""
}

func (this *Builtin_OrderBy) GetAscending() bool {
	if this != nil && this.Ascending != nil {
		return *this.Ascending
	}
	return Default_Builtin_OrderBy_Ascending
}

type Builtin_GroupedMapReduce struct {
	GroupMapping     *Mapping   `protobuf:"bytes,1,req,name=group_mapping" json:"group_mapping,omitempty"`
	ValueMapping     *Mapping   `protobuf:"bytes,2,req,name=value_mapping" json:"value_mapping,omitempty"`
	Reduction        *Reduction `protobuf:"bytes,3,req,name=reduction" json:"reduction,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (this *Builtin_GroupedMapReduce) Reset()         { *this = Builtin_GroupedMapReduce{} }
func (this *Builtin_GroupedMapReduce) String() string { return proto.CompactTextString(this) }
func (*Builtin_GroupedMapReduce) ProtoMessage()       {}

func (this *Builtin_GroupedMapReduce) GetGroupMapping() *Mapping {
	if this != nil {
		return this.GroupMapping
	}
	return nil
}

func (this *Builtin_GroupedMapReduce) GetValueMapping() *Mapping {
	if this != nil {
		return this.ValueMapping
	}
	return nil
}

func (this *Builtin_GroupedMapReduce) GetReduction() *Reduction {
	if this != nil {
		return this.Reduction
	}
	return nil
}

type Builtin_Range struct {
	Attrname         *string `protobuf:"bytes,1,req,name=attrname" json:"attrname,omitempty"`
	Lowerbound       *Term   `protobuf:"bytes,2,opt,name=lowerbound" json:"lowerbound,omitempty"`
	Upperbound       *Term   `protobuf:"bytes,3,opt,name=upperbound" json:"upperbound,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Builtin_Range) Reset()         { *this = Builtin_Range{} }
func (this *Builtin_Range) String() string { return proto.CompactTextString(this) }
func (*Builtin_Range) ProtoMessage()       {}

func (this *Builtin_Range) GetAttrname() string {
	if this != nil && this.Attrname != nil {
		return *this.Attrname
	}
	return ""
}

func (this *Builtin_Range) GetLowerbound() *Term {
	if this != nil {
		return this.Lowerbound
	}
	return nil
}

func (this *Builtin_Range) GetUpperbound() *Term {
	if this != nil {
		return this.Upperbound
	}
	return nil
}

type Reduction struct {
	Base             *Term   `protobuf:"bytes,1,req,name=base" json:"base,omitempty"`
	Var1             *string `protobuf:"bytes,2,req,name=var1" json:"var1,omitempty"`
	Var2             *string `protobuf:"bytes,3,req,name=var2" json:"var2,omitempty"`
	Body             *Term   `protobuf:"bytes,4,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Reduction) Reset()         { *this = Reduction{} }
func (this *Reduction) String() string { return proto.CompactTextString(this) }
func (*Reduction) ProtoMessage()       {}

func (this *Reduction) GetBase() *Term {
	if this != nil {
		return this.Base
	}
	return nil
}

func (this *Reduction) GetVar1() string {
	if this != nil && this.Var1 != nil {
		return *this.Var1
	}
	return ""
}

func (this *Reduction) GetVar2() string {
	if this != nil && this.Var2 != nil {
		return *this.Var2
	}
	return ""
}

func (this *Reduction) GetBody() *Term {
	if this != nil {
		return this.Body
	}
	return nil
}

type Mapping struct {
	Arg              *string                   `protobuf:"bytes,1,req,name=arg" json:"arg,omitempty"`
	Body             *Term                     `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (this *Mapping) Reset()         { *this = Mapping{} }
func (this *Mapping) String() string { return proto.CompactTextString(this) }
func (*Mapping) ProtoMessage()       {}

var extRange_Mapping = []proto.ExtensionRange{
	{1000, 1099},
}

func (*Mapping) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Mapping
}
func (this *Mapping) ExtensionMap() map[int32]proto.Extension {
	if this.XXX_extensions == nil {
		this.XXX_extensions = make(map[int32]proto.Extension)
	}
	return this.XXX_extensions
}

func (this *Mapping) GetArg() string {
	if this != nil && this.Arg != nil {
		return *this.Arg
	}
	return ""
}

func (this *Mapping) GetBody() *Term {
	if this != nil {
		return this.Body
	}
	return nil
}

type Predicate struct {
	Arg              *string `protobuf:"bytes,1,req,name=arg" json:"arg,omitempty"`
	Body             *Term   `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Predicate) Reset()         { *this = Predicate{} }
func (this *Predicate) String() string { return proto.CompactTextString(this) }
func (*Predicate) ProtoMessage()       {}

func (this *Predicate) GetArg() string {
	if this != nil && this.Arg != nil {
		return *this.Arg
	}
	return ""
}

func (this *Predicate) GetBody() *Term {
	if this != nil {
		return this.Body
	}
	return nil
}

type ReadQuery struct {
	Term             *Term                     `protobuf:"bytes,1,req,name=term" json:"term,omitempty"`
	MaxChunkSize     *int64                    `protobuf:"varint,2,opt,name=max_chunk_size" json:"max_chunk_size,omitempty"`
	MaxAge           *int64                    `protobuf:"varint,3,opt,name=max_age" json:"max_age,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (this *ReadQuery) Reset()         { *this = ReadQuery{} }
func (this *ReadQuery) String() string { return proto.CompactTextString(this) }
func (*ReadQuery) ProtoMessage()       {}

var extRange_ReadQuery = []proto.ExtensionRange{
	{1000, 1099},
}

func (*ReadQuery) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ReadQuery
}
func (this *ReadQuery) ExtensionMap() map[int32]proto.Extension {
	if this.XXX_extensions == nil {
		this.XXX_extensions = make(map[int32]proto.Extension)
	}
	return this.XXX_extensions
}

func (this *ReadQuery) GetTerm() *Term {
	if this != nil {
		return this.Term
	}
	return nil
}

func (this *ReadQuery) GetMaxChunkSize() int64 {
	if this != nil && this.MaxChunkSize != nil {
		return *this.MaxChunkSize
	}
	return 0
}

func (this *ReadQuery) GetMaxAge() int64 {
	if this != nil && this.MaxAge != nil {
		return *this.MaxAge
	}
	return 0
}

type WriteQuery struct {
	Type             *WriteQuery_WriteQueryType `protobuf:"varint,1,req,name=type,enum=WriteQuery_WriteQueryType" json:"type,omitempty"`
	Atomic           *bool                      `protobuf:"varint,11,opt,name=atomic,def=1" json:"atomic,omitempty"`
	Update           *WriteQuery_Update         `protobuf:"bytes,2,opt,name=update" json:"update,omitempty"`
	Delete           *WriteQuery_Delete         `protobuf:"bytes,3,opt,name=delete" json:"delete,omitempty"`
	Mutate           *WriteQuery_Mutate         `protobuf:"bytes,4,opt,name=mutate" json:"mutate,omitempty"`
	Insert           *WriteQuery_Insert         `protobuf:"bytes,5,opt,name=insert" json:"insert,omitempty"`
	ForEach          *WriteQuery_ForEach        `protobuf:"bytes,7,opt,name=for_each" json:"for_each,omitempty"`
	PointUpdate      *WriteQuery_PointUpdate    `protobuf:"bytes,8,opt,name=point_update" json:"point_update,omitempty"`
	PointDelete      *WriteQuery_PointDelete    `protobuf:"bytes,9,opt,name=point_delete" json:"point_delete,omitempty"`
	PointMutate      *WriteQuery_PointMutate    `protobuf:"bytes,10,opt,name=point_mutate" json:"point_mutate,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (this *WriteQuery) Reset()         { *this = WriteQuery{} }
func (this *WriteQuery) String() string { return proto.CompactTextString(this) }
func (*WriteQuery) ProtoMessage()       {}

const Default_WriteQuery_Atomic bool = true

func (this *WriteQuery) GetType() WriteQuery_WriteQueryType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *WriteQuery) GetAtomic() bool {
	if this != nil && this.Atomic != nil {
		return *this.Atomic
	}
	return Default_WriteQuery_Atomic
}

func (this *WriteQuery) GetUpdate() *WriteQuery_Update {
	if this != nil {
		return this.Update
	}
	return nil
}

func (this *WriteQuery) GetDelete() *WriteQuery_Delete {
	if this != nil {
		return this.Delete
	}
	return nil
}

func (this *WriteQuery) GetMutate() *WriteQuery_Mutate {
	if this != nil {
		return this.Mutate
	}
	return nil
}

func (this *WriteQuery) GetInsert() *WriteQuery_Insert {
	if this != nil {
		return this.Insert
	}
	return nil
}

func (this *WriteQuery) GetForEach() *WriteQuery_ForEach {
	if this != nil {
		return this.ForEach
	}
	return nil
}

func (this *WriteQuery) GetPointUpdate() *WriteQuery_PointUpdate {
	if this != nil {
		return this.PointUpdate
	}
	return nil
}

func (this *WriteQuery) GetPointDelete() *WriteQuery_PointDelete {
	if this != nil {
		return this.PointDelete
	}
	return nil
}

func (this *WriteQuery) GetPointMutate() *WriteQuery_PointMutate {
	if this != nil {
		return this.PointMutate
	}
	return nil
}

type WriteQuery_Update struct {
	View             *Term    `protobuf:"bytes,1,req,name=view" json:"view,omitempty"`
	Mapping          *Mapping `protobuf:"bytes,2,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *WriteQuery_Update) Reset()         { *this = WriteQuery_Update{} }
func (this *WriteQuery_Update) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_Update) ProtoMessage()       {}

func (this *WriteQuery_Update) GetView() *Term {
	if this != nil {
		return this.View
	}
	return nil
}

func (this *WriteQuery_Update) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type WriteQuery_Delete struct {
	View             *Term  `protobuf:"bytes,1,req,name=view" json:"view,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *WriteQuery_Delete) Reset()         { *this = WriteQuery_Delete{} }
func (this *WriteQuery_Delete) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_Delete) ProtoMessage()       {}

func (this *WriteQuery_Delete) GetView() *Term {
	if this != nil {
		return this.View
	}
	return nil
}

type WriteQuery_Mutate struct {
	View             *Term    `protobuf:"bytes,1,req,name=view" json:"view,omitempty"`
	Mapping          *Mapping `protobuf:"bytes,2,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *WriteQuery_Mutate) Reset()         { *this = WriteQuery_Mutate{} }
func (this *WriteQuery_Mutate) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_Mutate) ProtoMessage()       {}

func (this *WriteQuery_Mutate) GetView() *Term {
	if this != nil {
		return this.View
	}
	return nil
}

func (this *WriteQuery_Mutate) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type WriteQuery_Insert struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	Terms            []*Term   `protobuf:"bytes,2,rep,name=terms" json:"terms,omitempty"`
	Overwrite        *bool     `protobuf:"varint,3,opt,name=overwrite,def=0" json:"overwrite,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *WriteQuery_Insert) Reset()         { *this = WriteQuery_Insert{} }
func (this *WriteQuery_Insert) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_Insert) ProtoMessage()       {}

const Default_WriteQuery_Insert_Overwrite bool = false

func (this *WriteQuery_Insert) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *WriteQuery_Insert) GetOverwrite() bool {
	if this != nil && this.Overwrite != nil {
		return *this.Overwrite
	}
	return Default_WriteQuery_Insert_Overwrite
}

type WriteQuery_ForEach struct {
	Stream           *Term         `protobuf:"bytes,1,req,name=stream" json:"stream,omitempty"`
	Var              *string       `protobuf:"bytes,2,req,name=var" json:"var,omitempty"`
	Queries          []*WriteQuery `protobuf:"bytes,3,rep,name=queries" json:"queries,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (this *WriteQuery_ForEach) Reset()         { *this = WriteQuery_ForEach{} }
func (this *WriteQuery_ForEach) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_ForEach) ProtoMessage()       {}

func (this *WriteQuery_ForEach) GetStream() *Term {
	if this != nil {
		return this.Stream
	}
	return nil
}

func (this *WriteQuery_ForEach) GetVar() string {
	if this != nil && this.Var != nil {
		return *this.Var
	}
	return ""
}

type WriteQuery_PointUpdate struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	Attrname         *string   `protobuf:"bytes,2,req,name=attrname" json:"attrname,omitempty"`
	Key              *Term     `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	Mapping          *Mapping  `protobuf:"bytes,4,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *WriteQuery_PointUpdate) Reset()         { *this = WriteQuery_PointUpdate{} }
func (this *WriteQuery_PointUpdate) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_PointUpdate) ProtoMessage()       {}

func (this *WriteQuery_PointUpdate) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *WriteQuery_PointUpdate) GetAttrname() string {
	if this != nil && this.Attrname != nil {
		return *this.Attrname
	}
	return ""
}

func (this *WriteQuery_PointUpdate) GetKey() *Term {
	if this != nil {
		return this.Key
	}
	return nil
}

func (this *WriteQuery_PointUpdate) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type WriteQuery_PointDelete struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	Attrname         *string   `protobuf:"bytes,2,req,name=attrname" json:"attrname,omitempty"`
	Key              *Term     `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *WriteQuery_PointDelete) Reset()         { *this = WriteQuery_PointDelete{} }
func (this *WriteQuery_PointDelete) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_PointDelete) ProtoMessage()       {}

func (this *WriteQuery_PointDelete) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *WriteQuery_PointDelete) GetAttrname() string {
	if this != nil && this.Attrname != nil {
		return *this.Attrname
	}
	return ""
}

func (this *WriteQuery_PointDelete) GetKey() *Term {
	if this != nil {
		return this.Key
	}
	return nil
}

type WriteQuery_PointMutate struct {
	TableRef         *TableRef `protobuf:"bytes,1,req,name=table_ref" json:"table_ref,omitempty"`
	Attrname         *string   `protobuf:"bytes,2,req,name=attrname" json:"attrname,omitempty"`
	Key              *Term     `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	Mapping          *Mapping  `protobuf:"bytes,4,req,name=mapping" json:"mapping,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *WriteQuery_PointMutate) Reset()         { *this = WriteQuery_PointMutate{} }
func (this *WriteQuery_PointMutate) String() string { return proto.CompactTextString(this) }
func (*WriteQuery_PointMutate) ProtoMessage()       {}

func (this *WriteQuery_PointMutate) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *WriteQuery_PointMutate) GetAttrname() string {
	if this != nil && this.Attrname != nil {
		return *this.Attrname
	}
	return ""
}

func (this *WriteQuery_PointMutate) GetKey() *Term {
	if this != nil {
		return this.Key
	}
	return nil
}

func (this *WriteQuery_PointMutate) GetMapping() *Mapping {
	if this != nil {
		return this.Mapping
	}
	return nil
}

type MetaQuery struct {
	Type             *MetaQuery_MetaQueryType `protobuf:"varint,1,req,name=type,enum=MetaQuery_MetaQueryType" json:"type,omitempty"`
	DbName           *string                  `protobuf:"bytes,2,opt,name=db_name" json:"db_name,omitempty"`
	CreateTable      *MetaQuery_CreateTable   `protobuf:"bytes,3,opt,name=create_table" json:"create_table,omitempty"`
	DropTable        *TableRef                `protobuf:"bytes,4,opt,name=drop_table" json:"drop_table,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (this *MetaQuery) Reset()         { *this = MetaQuery{} }
func (this *MetaQuery) String() string { return proto.CompactTextString(this) }
func (*MetaQuery) ProtoMessage()       {}

func (this *MetaQuery) GetType() MetaQuery_MetaQueryType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *MetaQuery) GetDbName() string {
	if this != nil && this.DbName != nil {
		return *this.DbName
	}
	return ""
}

func (this *MetaQuery) GetCreateTable() *MetaQuery_CreateTable {
	if this != nil {
		return this.CreateTable
	}
	return nil
}

func (this *MetaQuery) GetDropTable() *TableRef {
	if this != nil {
		return this.DropTable
	}
	return nil
}

type MetaQuery_CreateTable struct {
	Datacenter       *string   `protobuf:"bytes,1,opt,name=datacenter" json:"datacenter,omitempty"`
	TableRef         *TableRef `protobuf:"bytes,3,req,name=table_ref" json:"table_ref,omitempty"`
	PrimaryKey       *string   `protobuf:"bytes,4,opt,name=primary_key,def=id" json:"primary_key,omitempty"`
	CacheSize        *int64    `protobuf:"varint,5,opt,name=cache_size,def=1073741824" json:"cache_size,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *MetaQuery_CreateTable) Reset()         { *this = MetaQuery_CreateTable{} }
func (this *MetaQuery_CreateTable) String() string { return proto.CompactTextString(this) }
func (*MetaQuery_CreateTable) ProtoMessage()       {}

const Default_MetaQuery_CreateTable_PrimaryKey string = "id"
const Default_MetaQuery_CreateTable_CacheSize int64 = 1073741824

func (this *MetaQuery_CreateTable) GetDatacenter() string {
	if this != nil && this.Datacenter != nil {
		return *this.Datacenter
	}
	return ""
}

func (this *MetaQuery_CreateTable) GetTableRef() *TableRef {
	if this != nil {
		return this.TableRef
	}
	return nil
}

func (this *MetaQuery_CreateTable) GetPrimaryKey() string {
	if this != nil && this.PrimaryKey != nil {
		return *this.PrimaryKey
	}
	return Default_MetaQuery_CreateTable_PrimaryKey
}

func (this *MetaQuery_CreateTable) GetCacheSize() int64 {
	if this != nil && this.CacheSize != nil {
		return *this.CacheSize
	}
	return Default_MetaQuery_CreateTable_CacheSize
}

type Query struct {
	Type             *Query_QueryType `protobuf:"varint,1,req,name=type,enum=Query_QueryType" json:"type,omitempty"`
	Token            *int64           `protobuf:"varint,2,req,name=token" json:"token,omitempty"`
	ReadQuery        *ReadQuery       `protobuf:"bytes,3,opt,name=read_query" json:"read_query,omitempty"`
	WriteQuery       *WriteQuery      `protobuf:"bytes,4,opt,name=write_query" json:"write_query,omitempty"`
	MetaQuery        *MetaQuery       `protobuf:"bytes,5,opt,name=meta_query" json:"meta_query,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (this *Query) Reset()         { *this = Query{} }
func (this *Query) String() string { return proto.CompactTextString(this) }
func (*Query) ProtoMessage()       {}

func (this *Query) GetType() Query_QueryType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Query) GetToken() int64 {
	if this != nil && this.Token != nil {
		return *this.Token
	}
	return 0
}

func (this *Query) GetReadQuery() *ReadQuery {
	if this != nil {
		return this.ReadQuery
	}
	return nil
}

func (this *Query) GetWriteQuery() *WriteQuery {
	if this != nil {
		return this.WriteQuery
	}
	return nil
}

func (this *Query) GetMetaQuery() *MetaQuery {
	if this != nil {
		return this.MetaQuery
	}
	return nil
}

type Response struct {
	StatusCode       *Response_StatusCode `protobuf:"varint,1,req,name=status_code,enum=Response_StatusCode" json:"status_code,omitempty"`
	Token            *int64               `protobuf:"varint,2,req,name=token" json:"token,omitempty"`
	Response         []string             `protobuf:"bytes,3,rep,name=response" json:"response,omitempty"`
	ErrorMessage     *string              `protobuf:"bytes,4,opt,name=error_message" json:"error_message,omitempty"`
	Backtrace        *Response_Backtrace  `protobuf:"bytes,5,opt,name=backtrace" json:"backtrace,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (this *Response) Reset()         { *this = Response{} }
func (this *Response) String() string { return proto.CompactTextString(this) }
func (*Response) ProtoMessage()       {}

func (this *Response) GetStatusCode() Response_StatusCode {
	if this != nil && this.StatusCode != nil {
		return *this.StatusCode
	}
	return 0
}

func (this *Response) GetToken() int64 {
	if this != nil && this.Token != nil {
		return *this.Token
	}
	return 0
}

func (this *Response) GetErrorMessage() string {
	if this != nil && this.ErrorMessage != nil {
		return *this.ErrorMessage
	}
	return ""
}

func (this *Response) GetBacktrace() *Response_Backtrace {
	if this != nil {
		return this.Backtrace
	}
	return nil
}

type Response_Backtrace struct {
	Frame            []string `protobuf:"bytes,1,rep,name=frame" json:"frame,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Response_Backtrace) Reset()         { *this = Response_Backtrace{} }
func (this *Response_Backtrace) String() string { return proto.CompactTextString(this) }
func (*Response_Backtrace) ProtoMessage()       {}

func init() {
	proto.RegisterEnum("Term_TermType", Term_TermType_name, Term_TermType_value)
	proto.RegisterEnum("Builtin_BuiltinType", Builtin_BuiltinType_name, Builtin_BuiltinType_value)
	proto.RegisterEnum("Builtin_Comparison", Builtin_Comparison_name, Builtin_Comparison_value)
	proto.RegisterEnum("WriteQuery_WriteQueryType", WriteQuery_WriteQueryType_name, WriteQuery_WriteQueryType_value)
	proto.RegisterEnum("MetaQuery_MetaQueryType", MetaQuery_MetaQueryType_name, MetaQuery_MetaQueryType_value)
	proto.RegisterEnum("Query_QueryType", Query_QueryType_name, Query_QueryType_value)
	proto.RegisterEnum("Response_StatusCode", Response_StatusCode_name, Response_StatusCode_value)
}
